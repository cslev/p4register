{
  "program" : "registers.p4",
  "__meta__" : {
    "version" : [2, 7],
    "compiler" : "https://github.com/p4lang/p4c"
  },
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 1, false],
        ["tmp_0", 1, false],
        ["metadata.modified", 1, false],
        ["metadata.read_from_register", 8, false],
        ["_padding_0", 5, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 1,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "arp_t",
      "id" : 2,
      "fields" : [
        ["h_type", 16, false],
        ["p_type", 16, false],
        ["h_len", 8, false],
        ["p_len", 8, false],
        ["op_code", 16, false],
        ["src_mac", 48, false],
        ["src_ip", 32, false],
        ["dst_mac", 48, false],
        ["dst_ip", 32, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t2",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["flags_1", 4, false],
        ["flags_2", 4, false],
        ["flags_3", 4, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false],
        ["options", 96, false]
      ]
    },
    {
      "name" : "netcat_t",
      "id" : 5,
      "fields" : [
        ["one_character", 8, false],
        ["closing_character", 8, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 6,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["len", 16, false],
        ["checksum", 16, false],
        ["payload", 120, false]
      ]
    },
    {
      "name" : "udp_metadata_t",
      "id" : 7,
      "fields" : [
        ["udp_payload_length", 16, false]
      ]
    },
    {
      "name" : "tcp_metadata_t",
      "id" : 8,
      "fields" : [
        ["full_length", 16, false],
        ["full_length_in_bytes", 16, false],
        ["header_length", 16, false],
        ["header_length_in_bytes", 16, false],
        ["payload_length", 16, false],
        ["payload_length_in_bytes", 16, false],
        ["tcp_header_length_for_checksum", 16, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 9,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 1, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["_padding", 4, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp",
      "id" : 3,
      "header_type" : "arp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 5,
      "header_type" : "tcp_t2",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "netcat",
      "id" : 6,
      "header_type" : "netcat_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 7,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "userMetadata.udp_metadata",
      "id" : 8,
      "header_type" : "udp_metadata_t",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "userMetadata.tcp_metadata",
      "id" : 9,
      "header_type" : "tcp_metadata_t",
      "metadata" : true,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6],
    ["UnhandledIPv4Options", 7],
    ["IPv4IncorrectVersion", 8],
    ["BadIPv4HeaderChecksum", 9]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0806",
              "mask" : null,
              "next_state" : "parse_arp"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_arp",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0001",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["arp", "op_code"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "b2d",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "version"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x04"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "expression",
                  "value" : {
                    "op" : "d2b",
                    "left" : null,
                    "right" : {
                      "type" : "field",
                      "value" : ["scalars", "tmp"]
                    }
                  }
                },
                {
                  "type" : "hexstr",
                  "value" : "8"
                }
              ],
              "op" : "verify"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "b2d",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "ihl"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x05"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "expression",
                  "value" : {
                    "op" : "d2b",
                    "left" : null,
                    "right" : {
                      "type" : "field",
                      "value" : ["scalars", "tmp_0"]
                    }
                  }
                },
                {
                  "type" : "hexstr",
                  "value" : "7"
                }
              ],
              "op" : "verify"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "full_length"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "totalLen"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffec"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x3"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "header_length"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["tcp", "dataOffset"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x5"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "payload_length"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["userMetadata.tcp_metadata", "full_length"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["userMetadata.tcp_metadata", "header_length"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "full_length_in_bytes"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffec"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "header_length_in_bytes"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["tcp", "dataOffset"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x2"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "payload_length_in_bytes"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "totalLen"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffec"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["tcp", "dataOffset"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.tcp_metadata", "tcp_header_length_for_checksum"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["userMetadata.tcp_metadata", "header_length_in_bytes"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["userMetadata.tcp_metadata", "payload_length_in_bytes"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000",
              "mask" : null,
              "next_state" : null
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_tcp_with_payload"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["userMetadata.tcp_metadata", "payload_length"]
            }
          ]
        },
        {
          "name" : "parse_tcp_with_payload",
          "id" : 4,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x115c",
              "mask" : null,
              "next_state" : "parse_netcat"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ]
        },
        {
          "name" : "parse_netcat",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "netcat"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["userMetadata.udp_metadata", "udp_payload_length"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["udp", "len"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xfff8"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "registers.p4",
        "line" : 822,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "arp", "ipv4", "tcp", "netcat", "udp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "r",
      "id" : 0,
      "source_info" : {
        "filename" : "registers.p4",
        "line" : 192,
        "column" : 20,
        "source_fragment" : "r"
      },
      "size" : 1,
      "bitwidth" : 8
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "source_info" : {
        "filename" : "registers.p4",
        "line" : 787,
        "column" : 7,
        "source_fragment" : "update_checksum_with_payload ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["userMetadata.tcp_metadata", "tcp_header_length_for_checksum"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "seqNo"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "ackNo"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dataOffset"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "flags_1"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "flags_2"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "flags_3"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "window"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "urgentPtr"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "options"]
        },
        {
          "type" : "header",
          "value" : "netcat"
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 592,
            "column" : 8,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.portfwd",
      "id" : 4,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 598,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.read_from_register"]
            },
            {
              "type" : "register_array",
              "value" : "r"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 654,
            "column" : 28,
            "source_fragment" : "r.read(meta.read_from_register,0)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "r"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["netcat", "one_character"]
            }
          ],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 656,
            "column" : 28,
            "source_fragment" : "r.write(0, hdr.netcat.one_character)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.modified"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 657,
            "column" : 28,
            "source_fragment" : "meta.modified=1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["netcat", "one_character"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.read_from_register"]
            }
          ],
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 658,
            "column" : 28,
            "source_fragment" : "hdr.netcat.one_character = meta.read_from_register"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "registers.p4",
        "line" : 554,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "MyIngress.ip_debug_start.ip_debug_table",
          "id" : 0,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 374,
            "column" : 10,
            "source_fragment" : "ip_debug_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.version",
              "target" : ["ipv4", "version"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.ihl",
              "target" : ["ipv4", "ihl"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.diffserv",
              "target" : ["ipv4", "diffserv"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.totalLen",
              "target" : ["ipv4", "totalLen"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.identification",
              "target" : ["ipv4", "identification"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.flags",
              "target" : ["ipv4", "flags"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.fragOffset",
              "target" : ["ipv4", "fragOffset"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.ttl",
              "target" : ["ipv4", "ttl"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.protocol",
              "target" : ["ipv4", "protocol"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.hdrChecksum",
              "target" : ["ipv4", "hdrChecksum"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0],
          "actions" : ["NoAction"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "NoAction" : "node_6"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.tcp_debug_start.tcp_debug_table",
          "id" : 1,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 416,
            "column" : 10,
            "source_fragment" : "tcp_debug_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.tcp_metadata.full_length",
              "target" : ["userMetadata.tcp_metadata", "full_length"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.tcp_metadata.header_length",
              "target" : ["userMetadata.tcp_metadata", "header_length"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.tcp_metadata.payload_length",
              "target" : ["userMetadata.tcp_metadata", "payload_length"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.tcp_metadata.payload_length_in_bytes",
              "target" : ["userMetadata.tcp_metadata", "payload_length_in_bytes"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.srcPort",
              "target" : ["tcp", "srcPort"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.dstPort",
              "target" : ["tcp", "dstPort"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.seqNo",
              "target" : ["tcp", "seqNo"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.ackNo",
              "target" : ["tcp", "ackNo"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.dataOffset",
              "target" : ["tcp", "dataOffset"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.flags_1",
              "target" : ["tcp", "flags_1"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.flags_2",
              "target" : ["tcp", "flags_2"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.flags_3",
              "target" : ["tcp", "flags_3"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.window",
              "target" : ["tcp", "window"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.checksum",
              "target" : ["tcp", "checksum"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.tcp.urgentPtr",
              "target" : ["tcp", "urgentPtr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1],
          "actions" : ["NoAction"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "NoAction" : "node_8"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act",
          "id" : 2,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["act"],
          "base_default_next" : "MyIngress.netcat_debug_start.netcat_debug_table",
          "next_tables" : {
            "act" : "MyIngress.netcat_debug_start.netcat_debug_table"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.netcat_debug_start.netcat_debug_table",
          "id" : 3,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 497,
            "column" : 10,
            "source_fragment" : "netcat_debug_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.netcat.one_character",
              "target" : ["netcat", "one_character"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.netcat.closing_character",
              "target" : ["netcat", "closing_character"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.read_from_register",
              "target" : ["scalars", "metadata.read_from_register"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["NoAction"],
          "base_default_next" : "MyIngress.port_exact",
          "next_tables" : {
            "NoAction" : "MyIngress.port_exact"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.port_exact",
          "id" : 4,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 600,
            "column" : 10,
            "source_fragment" : "port_exact"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4, 3],
          "actions" : ["MyIngress.portfwd", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.portfwd" : null,
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          },
          "entries" : [
            {
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0000"
                }
              ],
              "action_entry" : {
                "action_id" : 4,
                "action_data" : ["0x1"]
              },
              "priority" : 1
            },
            {
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x0001"
                }
              ],
              "action_entry" : {
                "action_id" : 4,
                "action_data" : ["0x0"]
              },
              "priority" : 2
            }
          ]
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 623,
            "column" : 11,
            "source_fragment" : "hdr.ethernet.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ethernet", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_3"
        },
        {
          "name" : "node_3",
          "id" : 1,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 629,
            "column" : 15,
            "source_fragment" : "hdr.ethernet.etherType == TYPE_ARP"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ethernet", "etherType"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0806"
              }
            }
          },
          "false_next" : "node_4",
          "true_next" : "MyIngress.port_exact"
        },
        {
          "name" : "node_4",
          "id" : 2,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 638,
            "column" : 19,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "MyIngress.ip_debug_start.ip_debug_table",
          "false_next" : "MyIngress.port_exact"
        },
        {
          "name" : "node_6",
          "id" : 3,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 645,
            "column" : 23,
            "source_fragment" : "hdr.ipv4.protocol == IP_PROTO_TCP"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ipv4", "protocol"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x06"
              }
            }
          },
          "true_next" : "MyIngress.tcp_debug_start.tcp_debug_table",
          "false_next" : "MyIngress.port_exact"
        },
        {
          "name" : "node_8",
          "id" : 4,
          "source_info" : {
            "filename" : "registers.p4",
            "line" : 651,
            "column" : 27,
            "source_fragment" : "meta.tcp_metadata.payload_length_in_bytes > 0 && meta.tcp_metadata.payload_length_in_bytes < 3"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["userMetadata.tcp_metadata", "payload_length_in_bytes"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "<",
                  "left" : {
                    "type" : "field",
                    "value" : ["userMetadata.tcp_metadata", "payload_length_in_bytes"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0003"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_act",
          "false_next" : "MyIngress.port_exact"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "registers.p4",
        "line" : 690,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "target" : ["tcp", "checksum"],
      "type" : "generic",
      "calculation" : "calc",
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "and",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["tcp", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "protocol"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x06"
                  }
                }
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.modified"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ]
  ]
}